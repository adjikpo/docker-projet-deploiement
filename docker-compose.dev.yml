version: '3.8'
services:
  frontend:
    image: nginx:1.19
    labels:
      - "traefik.http.routers.frontend.rule=Host(`frontend.docker.localhost`)"
    #    ports:
    #    - "5000:"
    volumes:
    - ./frontend:/usr/share/nginx/html
      #    - logvolume01:/var/log
      #    links:
      #    - redis
      #  redis:
      #    image: redis
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  backend: 
    build:
      context: ./backend
      dockerfile: Dockerfile
    labels: 
      - "traefik.http.routers.backend.rule=Host(`backend.docker.localhost`)"
      - "traefik.http.middlewares.back-mid.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.back-mid.headers.accesscontrolalloworiginlist=http://frontend.docker.localhost"
        #      - "traefik.http.middlewares.back-mid.headers.accessControlExposeHeaders=*"
      - "traefik.http.routers.backend.middlewares=back-mid"
  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_PASSWORD=mypassword
      - MYSQL_USER=myuser
      - MYSQL_DATABASE=mydb
